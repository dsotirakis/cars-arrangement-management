doctype html
html
  head
    title Timeline | Editable Groups
    style.
      body, html {
      font-family: arial, sans-serif;
      font-size: 11pt;
      }
      #visualization {
      box-sizing: border-box;
      width: 100%;
      height: 300px;
      }
      .vis-item.openwheel  { background-color: #B0E2FF; }
      .vis-item.rally      { background-color: #EAEAEA; }
      .vis-item.motorcycle { background-color: #FA8072; }
      .vis-item.touringcar { background-color: #B4EEB4; }
      .vis-item.endurance  { background-color: #FFFFCC; }
    script(src='vis/dist/vis.js')
    link(href='vis/dist/vis-timeline-graph2d.min.css', rel='stylesheet', type='text/css')

    link(href='//cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.3.6/css/bootstrap.css' rel='stylesheet')
    link(href='//cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.37/css/bootstrap-datetimepicker.css' rel='stylesheet')
    script(src='//cdnjs.cloudflare.com/ajax/libs/jquery/2.1.3/jquery.js')
    script(src='//cdnjs.cloudflare.com/ajax/libs/moment.js/2.15.2/moment.min.js')
    script(src='//cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.3.6/js/bootstrap.js')
    script(src='//cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.37/js/bootstrap-datetimepicker.min.js')
    meta(charset='utf-8')
    meta(name='viewport' content='width=device-width, initial-scale=1')
    title jQuery UI Datepicker - Default functionality
    link(rel='stylesheet' href='//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css')
    link(rel='stylesheet' href='/resources/demos/style.css')
    script(src='https://code.jquery.com/jquery-1.12.4.js')
    script(src='https://code.jquery.com/ui/1.12.1/jquery-ui.js')
    script(src='bower_components/jquery/jquery.min.js')
    script(src='bower_components/moment/min/moment.min.js')
    script(src='bower_components/bootstrap/dist/js/booap.min.js')
    script(src='bower_components/eonasdan-bootstrap-datetimepicker/build/js/bootstrap-datetimepicker.min.js')
    link(rel='stylesheet' href='bower_components/bootstrap/dist/css/bootstrap.min.css')
    link(rel='stylesheet' href='bower_components/eonasdan-bootstrap-datetimepicker/build/css/bootstrap-datetimepicker.min.css')
  body
    p
      | This timeline displays the total booked cars. Every rectangle represents the start and stop date of the event.


      form(method = 'get', action = '/')
        input(type= "submit", value = "Home")
      if categories.length > 0 
        .row

          hr(style='width: 100%; color: black; height: 1px; background-color:black;')
          form.form(action='/addCar' method='post')
            .form-group.col-xs-6
              label(for='car') Add Car:
                .col-sm-3
                  .col-md-3
                    br
                    .input-group 
                  
                      input(class='categ', type='text', name='carName', placeholder='Enter Car Number', required='', autocomplete="off")
                  
                      span.input-group-addon
                      input(class='categ', type='text', name='brand', placeholder='Enter Car Model', required='', autocomplete="off")
                      input(type="hidden", name='weight', value = 0)
                      input(type="hidden", name='categoryName', value = curCategory) 
                      span.input-group-addon
                      input(type='submit', value='Add Car')
                      br
     
          form.form(action='/deleteCar' method='post')
            .form-group.col-xs-3
              label(for='car') Delete Car:
                .col-sm-4
                  .col-md-4
                      br
                      select(id = "carDel", name = "carName", size = cars.length)
                        each car in cars
                          option(value={'carName':car.carName, 'categoryName':car.categoryName}) #{car.carName + " - " + car.brand}
                        br
                        input(type= "submit", class = "carDel", value = "Delete Car")


          form.form(action='/updateCarForm' method='post')
            .form-group.col-xs-3
              label(for='car') Update Car:
                .col-sm-9
                  .col-md-9
                    br
                    input(type = 'hidden', name = 'categoryName', value = curCategory)
                    input(type = 'submit', value= 'Update Cars')

        br
      br

      hr(style='width: 100%; color: black; height: 1px; background-color:black;')
      .container
        .row

          label.col-sm-9(for='Event') Add Event:
            form.form(action='/addEvent' method='post')
              .form-group.col-xs-9
                .col-md-3
                  .form-group-sm
                    .input-group.dp1
                      input#start.form-control(type='text' name='startDate')
                      span.input-group-addon
                        span.glyphicon.glyphicon-calendar
                  
                .col-md-3
                  .form-group-sm
                    .input-group.dp2
                      input#start.form-control(type='text' name='endDate')
                      span.input-group-addon
                        span.glyphicon.glyphicon-calendar


                .col-md-3
                  .form-group
                    input#start.form-control(type='hidden' name='categoryName', value = curCategory)
                button.btn.btn-primary Submit
                script.
                  $(function () {
                    $('.dp1').datetimepicker({
                      format: 'MM.DD.YYYY HH:mm',
                      stepping: 1,
                      useCurrent: false,
                      showClose: true,
                      allowInputToggle: true
                    });


                    $('.dp2').datetimepicker({
                      format: 'MM.DD.YYYY HH:mm',
                      stepping: 1,
                      useCurrent: false,
                      showClose: true,
                      allowInputToggle: true,
                      useCurrent: false
                    });

                    $('.dp1').on("dp.change", function(e) {
                      $('.dp2').data("DateTimePicker").minDate(e.date);
                    });

                    $('.dp2').on("dp.change", function(e) {
                      $('.dp1').data("DateTimePicker").maxDate(e.date);
                    });
                    $("#dp1").on("dp.change", function() {
                      $('.form').submit();
                    });
                  });
      


            form.form(action='/deleteEvent' method='post')
              .form-group.col-xs-2
                label(for='car') Delete Event:
                  .col-sm-4
                    .col-md-4
                        br
                        select(id = "eventDel", name = "event", size = 5 )
                          each event in events
                            option(value={'id':event._id, 'categoryName':event.categoryName}) #{"Car: " + event.carName}
                          br
                          input(type= "submit", class = "eventDel", value = "Delete Event")

  
    hr(style='width: 100%; color: black; height: 1px; background-color:black;')

    #visualization
    script.

      var options = {};
      var carsToString = !{JSON.stringify(cars)};
      var arr = [];
      carsToString.sort(function(a,b){return a.weight - b.weight});
      var len = carsToString.length;
      for (var i = 0; i < len; i++) {
        arr.push({"content": (i+1) + " - " + carsToString[i].brand + " - " + carsToString[i].carName, "id": carsToString[i].carName, "value": (i+1), className: 'lele'});
      }

      var datas = new vis.DataSet(arr);
      

      // function to make all groups visible again
      function showAllGroups(){
      groups.forEach(function(group){
      groups.update({id: group.id, visible: true});
      })
      };

      var arr2 = [];
      var eventsToString = !{JSON.stringify(events)};

      for (var i = 0; i < eventsToString.length; i++) {
        arr2.push({start: eventsToString[i].startDate, 
                   end: eventsToString[i].endDate, 
                   group: eventsToString[i].carName, 
                   className:eventsToString[i].carName, 
                   content: eventsToString[i].startDate + " - " +  eventsToString[i].endDate, 
                   id:eventsToString[i]._id});
      }

      
      var datas2 = new vis.DataSet(arr2);
      // create a dataset with items
      // note that months are zero-based in the JavaScript Date object, so month 3 is April

      // create visualization
      var container = document.getElementById('visualization');
      var options = {
      // option groupOrder can be a property name or a sort function
      // the sort function must compare two groups and return a value
      //     > 0 when a > b
      //     < 0 when a < b
      //       0 when a == b
      groupOrder: function (a, b) {
      return a.value - b.value;
      },
      groupOrderSwap: function (a, b, groups) {
      var v = a.value;
      a.value = b.value;
      b.value = v;
      },
      groupTemplate: function(group){
      var container = document.createElement('div');
      var label = document.createElement('span');
      label.innerHTML = group.content + ' ';
      container.insertAdjacentElement('afterBegin',label);
      var hide = document.createElement('button');
      hide.innerHTML = 'hide';
      hide.style.fontSize = 'small';
      hide.addEventListener('click',function(){
      groups.update({id: group.id, visible: false});
      });
      container.insertAdjacentElement('beforeEnd',hide);
      return container;
      },
      orientation: 'both',
      editable: true,
      groupEditable: true,
      start: new Date(2017, 12, 1),
      end: new Date(2018, 10, 1)
      };
      var timeline = new vis.Timeline(container);
      timeline.setOptions(options);
      timeline.setGroups(datas);
      timeline.setItems(datas2);
